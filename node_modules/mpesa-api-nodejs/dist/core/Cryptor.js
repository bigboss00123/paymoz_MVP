"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _crypto = _interopRequireDefault(require("crypto"));
var Cryptor = /*#__PURE__*/function () {
  function Cryptor() {
    (0, _classCallCheck2["default"])(this, Cryptor);
  }
  (0, _createClass2["default"])(Cryptor, null, [{
    key: "token",
    value: function token(public_key, api_key) {
      var public_key_decoded = Buffer.from(public_key, 'base64');
      var pem = Cryptor.der2pem(public_key_decoded);
      var new_key = _crypto["default"].createPublicKey(pem);
      var crypted = _crypto["default"].publicEncrypt({
        key: new_key,
        padding: _crypto["default"].constants.RSA_PKCS1_PADDING
      }, Buffer.from(api_key));
      return crypted.toString('base64');
    }

    /* Convert Pem to Der */
  }]);
  return Cryptor;
}();
(0, _defineProperty2["default"])(Cryptor, "pem2der", function (pem_data) {
  var begin = "KEY-----";
  var end = "-----END";
  pem_data = pem_data.substr(pem_data.indexOf(begin) + begin.length);
  pem_data = pem_data.substr(0, pem_data.indexOf(end));
  var der = Buffer.from(pem_data, "base64");
  return der;
});
/* Convert Der to Pem */
(0, _defineProperty2["default"])(Cryptor, "der2pem", function (der_data) {
  var pem = Buffer.from(der_data).toString("base64");
  var formattedPem = pem.match(/.{1,64}/g).join("\n");
  return "-----BEGIN PUBLIC KEY-----\n".concat(formattedPem, "\n-----END PUBLIC KEY-----\n");
});
(0, _defineProperty2["default"])(Cryptor, "getId", function () {
  var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;
  var characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  var charactersLength = characters.length;
  var randomString = "";
  for (var i = 0; i < length; i++) {
    randomString += characters.charAt(Math.floor(Math.random() * charactersLength));
  }
  return randomString;
});
;
var _default = exports["default"] = Cryptor;